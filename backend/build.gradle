plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.koupon'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	implementation 'org.springframework.kafka:spring-kafka'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	
	annotationProcessor 'org.projectlombok:lombok'
	
	compileOnly 'org.projectlombok:lombok'
	
	runtimeOnly 'com.mysql:mysql-connector-j'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation "org.testcontainers:junit-jupiter:1.19.4"
	testImplementation "org.testcontainers:mysql:1.19.4"
}

tasks.named('bootRun') {
    if (project.hasProperty('MYSQL_PASSWORD')) {
        environment "MYSQL_PASSWORD", project.property('MYSQL_PASSWORD')
    }
}

tasks.named('test') {  // JUnit5 활성화
	useJUnitPlatform()
}
